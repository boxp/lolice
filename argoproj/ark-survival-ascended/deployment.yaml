apiVersion: apps/v1
kind: Deployment
metadata:
  name: ark-server
  namespace: ark-survival-ascended
  labels:
    app: ark-server
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: ark-server
  template:
    metadata:
      labels:
        app: ark-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
      containers:
      - name: ark-server
        image: sknnr/ark-ascended-server:latest
        ports:
        - name: game-port
          containerPort: 7777
          protocol: UDP
        - name: game-port-2
          containerPort: 7778
          protocol: UDP
        - name: query-port
          containerPort: 27015
          protocol: UDP
        - name: rcon-port
          containerPort: 27020
          protocol: TCP
        env:
        - name: SERVER_MAP
          value: "TheIsland_WP"
        - name: SESSION_NAME
          value: "onitiku-server"
        # - name: SERVER_PASSWORD
        #   valueFrom:
        #     secretKeyRef:
        #       name: ark-server-generated-config
        #       key: server_password
        - name: SERVER_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ark-server-generated-config
              key: admin_password
        - name: GAME_PORT
          value: "7777"
        - name: QUERY_PORT
          value: "27015"
        - name: RCON_PORT
          value: "27020"
        - name: EXTRA_ARGS
          value: "-servergamelog -servergamelogincludetribelogs -ServerRCONOutputTribeLogs"
        volumeMounts:
        - name: ark-data
          mountPath: /home/steam/ark/ShooterGame/Saved
        - name: shared-logs
          mountPath: /shared/logs
        resources:
          requests:
            memory: "13Gi"
            cpu: "2000m"
          limits:
            memory: "16Gi"
            cpu: "4000m"
      - name: ark-metrics-collector
        image: python:3.13-slim
        ports:
        - name: ark-metrics
          containerPort: 5000
          protocol: TCP
        env:
        - name: POLL_INTERVAL
          value: "10"
        - name: LOG_FILE_PATH
          value: "/shared/logs/ShooterGame.log"
        - name: METRICS_COLLECTOR_PORT
          value: "5000"
        command:
        - /bin/bash
        - -c
        - |
          pip install ark-metrics-collector
          cat > /tmp/config.yaml << EOF
          poll_interval: 10
          log_file_path: "/shared/logs/ShooterGame.log"
          metrics_collector_port: 5000
          EOF
          ark-metrics-collector --config=/tmp/config.yaml
        volumeMounts:
        - name: shared-logs
          mountPath: /shared/logs
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      - name: a2s-exporter
        image: armsnyder/a2s-exporter:latest
        ports:
        - name: a2s-metrics
          containerPort: 9841
          protocol: TCP
        env:
        - name: A2S_EXPORTER_QUERY_ADDRESS
          value: "localhost:27015"
        - name: A2S_EXPORTER_PORT
          value: "9841"
        - name: A2S_EXPORTER_NAMESPACE
          value: "ark_a2s"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: ark-data
        persistentVolumeClaim:
          claimName: ark-server-data-claim
      - name: shared-logs
        emptyDir: {}
